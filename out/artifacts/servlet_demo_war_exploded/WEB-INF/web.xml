<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--定义了两个过滤器 AuthFilter 和 LogFilter, 在web.xml文件中进行配置的时候，Filter的执行顺序依靠filter-mapping标签的配置位置，越靠上优先级越高-->
    <filter>
        <filter-name>LogFilter</filter-name>
        <filter-class>filter.LogFilter</filter-class>
        <init-param>
            <param-name>log-level</param-name>
            <param-value>info</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>AuthFilter</filter-name>
        <filter-class>filter.AuthFilter</filter-class>
        <init-param>
            <param-name>filter-name</param-name>
            <param-value>authFilter</param-value>
        </init-param>
    </filter>

    <!-- filter-mapping 元素的顺序决定了 Web 容器应用过滤器到 Servlet 的顺序-->
    <filter-mapping>
        <filter-name>AuthFilter</filter-name>
        <url-pattern>/demo</url-pattern><!--这里的/代表项目上下文-->
        <dispatcher>REQUEST</dispatcher> <!--定义拦截方式，默认为request，即对request方式进行拦截，对FORWARD不进行拦截，需要大写 -->
    </filter-mapping>

    <filter-mapping>
        <filter-name>LogFilter</filter-name>
        <url-pattern>/demo</url-pattern><!--这里的/代表项目上下文-->
        <dispatcher>REQUEST</dispatcher> <!--定义拦截方式，默认为request，即对request方式进行拦截，对FORWARD不进行拦截，需要大写 -->
    </filter-mapping>


    <servlet>
        <servlet-name>Hello</servlet-name>
        <servlet-class>HelloServlet</servlet-class>
        <!--load-on-startup 元素标记容器是否应该在启动的时候加载这个servlet，实例化并调用其init()方法。
        当值为0或者大于0时，表示容器在应用启动时就加载并初始化这个servlet，并调用其init()方法；
        正数的值越小，该servlet的优先级越高，应用启动时就越先加载。
        如果该元素不存在或者这个数为负时，则容器会当该Servlet被请求时，再加载初始化
        -->
        <init-param>
            <param-name>charSet</param-name>
            <param-value>utf-8</param-value>
        </init-param>

        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>Hello</servlet-name>
        <url-pattern>/demo</url-pattern><!--这里的/代表项目上下文： http://localhost:8080/ServletDemo_war_exploded/-->
    </servlet-mapping>

    <!--设置session的过期时间，以分钟为单位，该元素值必须为整数，元素的值为零或负数，表示 Session 永远不会过期-->
    <session-config>
        <session-timeout>-1</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>